{"version":3,"file":"cart-summary-945c58e3.js","mappings":"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","sources":["webpack://checkout/./packages/core/src/app/cart/CartSummary.tsx","webpack://checkout/./packages/core/src/app/cart/EditLink.tsx","webpack://checkout/./packages/core/src/app/coupon/AppliedCoupon.tsx","webpack://checkout/./packages/core/src/app/giftCertificate/AppliedGiftCertificate.tsx","webpack://checkout/./packages/core/src/app/ui/icon/IconRemove.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/AppliedRedeemables.tsx","webpack://checkout/./packages/core/src/app/cart/Redeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToCartSummaryProps.ts","webpack://checkout/./packages/core/src/app/cart/mapToRedeemableProps.ts","webpack://checkout/./packages/core/src/app/cart/withRedeemable.tsx","webpack://checkout/./packages/core/src/app/cart/mapToOrderSummarySubtotalsProps.ts","webpack://checkout/./packages/core/src/app/order/OrderSummaryHeader.tsx","webpack://checkout/./packages/core/src/app/order/OrderSummary.tsx","webpack://checkout/./packages/core/src/app/order/removeBundledItems.ts"],"sourcesContent":["import { Checkout, ShopperCurrency, StoreCurrency } from '@bigcommerce/checkout-sdk';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { withCheckout } from '../checkout';\r\nimport { isBuyNowCart } from '../common/utility';\r\nimport OrderSummary from '../order/OrderSummary';\r\n\r\nimport mapToCartSummaryProps from './mapToCartSummaryProps';\r\nimport withRedeemable from './withRedeemable';\r\nimport EditLink from './EditLink';\r\nimport { RedeemableProps } from './Redeemable';\r\n\r\nexport type WithCheckoutCartSummaryProps = {\r\n    checkout: Checkout;\r\n    cartUrl: string;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrency;\r\n    storeCreditAmount?: number;\r\n} & RedeemableProps;\r\n\r\nconst CartSummary: FunctionComponent<WithCheckoutCartSummaryProps> = ({\r\n    cartUrl,\r\n    ...props\r\n}) => {\r\n    const headerLink = isBuyNowCart() ? null : <EditLink url={ cartUrl } />;\r\n\r\n    return (\r\n        withRedeemable(OrderSummary)({\r\n            ...props,\r\n            cartUrl,\r\n            headerLink,\r\n        })\r\n    );\r\n};\r\n\r\nexport default withCheckout(mapToCartSummaryProps)(CartSummary);\r\n","import React, { memo, FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\n\r\nexport interface EditLinkProps {\r\n    className?: string;\r\n    url: string;\r\n}\r\n\r\nconst EditLink: FunctionComponent<EditLinkProps> = ({ className, url }) => (\r\n    <a\r\n        className={ className || 'cart-header-link' }\r\n        data-test=\"cart-edit-link\"\r\n        href={ url }\r\n        id=\"cart-edit-link\"\r\n        target=\"_top\"\r\n    >\r\n        <TranslatedString id=\"cart.edit_cart_action\" />\r\n    </a>\r\n);\r\n\r\nexport default memo(EditLink);\r\n","import { Coupon } from '@bigcommerce/checkout-sdk';\r\nimport React, { memo, FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\n\r\nexport interface AppliedCouponProps {\r\n    coupon: Coupon;\r\n}\r\n\r\nconst AppliedCoupon: FunctionComponent<AppliedCouponProps> = ({ coupon }) => (\r\n    <div\r\n        className=\"redeemable-column redeemable-info\"\r\n        data-test=\"redeemable-item--coupon\"\r\n    >\r\n        <span className=\"redeemable-info-header\">\r\n            <span\r\n                className=\"redeemable-info-header--highlight\"\r\n                data-test=\"coupon-amount\"\r\n            >\r\n                { coupon.displayName }\r\n            </span>\r\n\r\n            { ' ' }\r\n\r\n            <TranslatedString id=\"redeemable.coupon_text\" />\r\n        </span>\r\n\r\n        <span className=\"redeemable-info-subHeader\" data-test=\"coupon-code\">\r\n            { coupon.code }\r\n        </span>\r\n    </div>\r\n);\r\n\r\nexport default memo(AppliedCoupon);\r\n","import { GiftCertificate } from '@bigcommerce/checkout-sdk';\r\nimport React, { memo, FunctionComponent } from 'react';\r\n\r\nimport { ShopperCurrency } from '../currency';\r\nimport { TranslatedString } from '../locale';\r\n\r\nexport interface AppliedGiftCertificateProps {\r\n    giftCertificate: GiftCertificate;\r\n}\r\n\r\nconst AppliedGiftCertificate: FunctionComponent<AppliedGiftCertificateProps> = ({ giftCertificate }) => (\r\n    <div\r\n        className=\"redeemable-column redeemable-info\"\r\n        data-test=\"redeemable-item--giftCertificate\"\r\n    >\r\n        <span className=\"redeemable-info-header\">\r\n            <span className=\"redeemable-info-header--highlight\" data-test=\"giftCertificate-amount\">\r\n                <ShopperCurrency amount={ giftCertificate.used } />\r\n            </span>\r\n\r\n            { ' ' }\r\n\r\n            <TranslatedString id=\"redeemable.gift_certificate_text\" />\r\n        </span>\r\n\r\n        <span className=\"redeemable-info-subHeader\">\r\n            { giftCertificate.remaining > 0 && <span className=\"redeemable-info-subHeader--remaining\">\r\n                <TranslatedString id=\"redeemable.gift_certificate_remaining_text\" />\r\n\r\n                { ' ' }\r\n\r\n                <span data-test=\"giftCertificate-remaining\">\r\n                    <ShopperCurrency amount={ giftCertificate.remaining } />\r\n                </span>\r\n            </span> }\r\n\r\n            <span data-test=\"giftCertificate-code\">\r\n                { giftCertificate.code }\r\n            </span>\r\n        </span>\r\n    </div>\r\n);\r\n\r\nexport default memo(AppliedGiftCertificate);\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport withIconContainer from './withIconContainer';\r\n\r\nconst IconRemove: FunctionComponent = () => (\r\n    <svg height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n        <path d=\"M14.59 8L12 10.59 9.41 8 8 9.41 10.59 12 8 14.59 9.41 16 12 13.41 14.59 16 16 14.59 13.41 12 16 9.41 14.59 8zM12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\r\n    </svg>\r\n);\r\n\r\nexport default withIconContainer(IconRemove);\r\n","import classNames from 'classnames';\r\nimport React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\nimport { IconRemove } from '../ui/icon';\r\n\r\nimport './AppliedRedeemable.scss';\r\n\r\nexport interface AppliedRedeemableProps {\r\n    isRemoving: boolean;\r\n    onRemove(): void;\r\n}\r\n\r\nconst AppliedRedeemable: FunctionComponent<AppliedRedeemableProps> = ({\r\n    children,\r\n    isRemoving,\r\n    onRemove,\r\n}) => (\r\n    <div className=\"form-checklist-header\">\r\n        <div className=\"form-checklist-checkbox optimizedCheckout-form-checklist-checkbox\">\r\n            <span className=\"is-srOnly\">\r\n                <TranslatedString id=\"redeemable.applied_text\" />\r\n            </span>\r\n        </div>\r\n\r\n        <div className=\"form-label form-label-redeemable\">\r\n            <div className=\"redeemable\">\r\n                { children }\r\n                <div className=\"redeemable-column redeemable-actions\">\r\n                    <button\r\n                        className={ classNames(\r\n                            'redeemable-remove',\r\n                            { 'is-loading': isRemoving }\r\n                        ) }\r\n                        data-test=\"redeemable-remove\"\r\n                        disabled={ isRemoving }\r\n                        onClick={ onRemove }\r\n                        type=\"button\"\r\n                    >\r\n                        <IconRemove />\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default AppliedRedeemable;\r\n","import { Coupon, GiftCertificate } from '@bigcommerce/checkout-sdk';\r\nimport React, { memo, useCallback, FunctionComponent } from 'react';\r\n\r\nimport { AppliedCoupon } from '../coupon';\r\nimport { AppliedGiftCertificate } from '../giftCertificate';\r\n\r\nimport AppliedRedeemable from './AppliedRedeemable';\r\n\r\ninterface AppliedCouponProps {\r\n    coupon: Coupon;\r\n    isRemoving?: boolean;\r\n    onRemoved(code: string): void;\r\n}\r\n\r\nconst AppliedCouponChecklistItem: FunctionComponent<AppliedCouponProps> = ({\r\n    coupon,\r\n    onRemoved,\r\n    isRemoving = false,\r\n}) => {\r\n    const handleRemove = useCallback(() => {\r\n        onRemoved(coupon.code);\r\n    }, [\r\n        coupon,\r\n        onRemoved,\r\n    ]);\r\n\r\n    return (\r\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\r\n            <AppliedRedeemable\r\n                isRemoving={ isRemoving }\r\n                onRemove={ handleRemove }\r\n            >\r\n                <AppliedCoupon coupon={ coupon } />\r\n            </AppliedRedeemable>\r\n        </li>\r\n    );\r\n};\r\n\r\ninterface AppliedGiftCertificateProps {\r\n    giftCertificate: GiftCertificate;\r\n    isRemoving?: boolean;\r\n    onRemoved(code: string): void;\r\n}\r\n\r\nconst AppliedGiftCertificateChecklistItem: FunctionComponent<AppliedGiftCertificateProps> = ({\r\n    giftCertificate,\r\n    onRemoved,\r\n    isRemoving = false,\r\n}) => {\r\n    const handleRemove = useCallback(() => {\r\n        onRemoved(giftCertificate.code);\r\n    }, [\r\n        giftCertificate,\r\n        onRemoved,\r\n    ]);\r\n\r\n    return (\r\n        <li className=\"form-checklist-item optimizedCheckout-form-checklist-item\">\r\n            <AppliedRedeemable\r\n                isRemoving={ isRemoving }\r\n                onRemove={ handleRemove }\r\n            >\r\n                <AppliedGiftCertificate giftCertificate={ giftCertificate } />\r\n            </AppliedRedeemable>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport interface AppliedRedeemablesProps {\r\n    coupons?: Coupon[];\r\n    giftCertificates?: GiftCertificate[];\r\n    isRemovingGiftCertificate?: boolean;\r\n    isRemovingCoupon?: boolean;\r\n    onRemovedCoupon(code: string): void;\r\n    onRemovedGiftCertificate(code: string): void;\r\n}\r\n\r\nconst AppliedRedeemables: FunctionComponent<AppliedRedeemablesProps> = ({\r\n    coupons = [],\r\n    giftCertificates = [],\r\n    isRemovingCoupon = false,\r\n    isRemovingGiftCertificate = false,\r\n    onRemovedCoupon,\r\n    onRemovedGiftCertificate,\r\n}) => {\r\n    if (!coupons.length && !giftCertificates.length) {\r\n        return null;\r\n    }\r\n\r\n    return (\r\n        <ul className=\"form-checklist optimizedCheckout-form-checklist\" data-test=\"redeemables-list\">\r\n            { coupons.map(coupon => (\r\n                <AppliedCouponChecklistItem\r\n                    coupon={ coupon }\r\n                    isRemoving={ isRemovingCoupon }\r\n                    key={ coupon.code }\r\n                    onRemoved={ onRemovedCoupon }\r\n                />\r\n            )) }\r\n\r\n            { giftCertificates.map(giftCertificate => (\r\n                <AppliedGiftCertificateChecklistItem\r\n                    giftCertificate={ giftCertificate }\r\n                    isRemoving={ isRemovingGiftCertificate }\r\n                    key={ giftCertificate.code }\r\n                    onRemoved={ onRemovedGiftCertificate }\r\n                />\r\n            )) }\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default memo(AppliedRedeemables);\r\n","import { CheckoutSelectors, RequestError } from '@bigcommerce/checkout-sdk';\r\nimport { memoizeOne } from '@bigcommerce/memoize';\r\nimport { withFormik, FieldProps, FormikProps } from 'formik';\r\nimport { noop } from 'lodash';\r\nimport React, { memo, useCallback, Fragment, FunctionComponent, KeyboardEvent } from 'react';\r\nimport { object, string } from 'yup';\r\n\r\nimport { preventDefault } from '../common/dom';\r\nimport { withLanguage, TranslatedString, WithLanguageProps } from '../locale';\r\nimport { Alert, AlertType } from '../ui/alert';\r\nimport { Button, ButtonVariant } from '../ui/button';\r\nimport { FormContextType, FormField, FormProvider, Label, TextInput } from '../ui/form';\r\nimport { Toggle } from '../ui/toggle';\r\n\r\nimport AppliedRedeemables, { AppliedRedeemablesProps } from './AppliedRedeemables';\r\n\r\nexport interface RedeemableFormValues {\r\n    redeemableCode: string;\r\n}\r\n\r\nexport type ReedemableChildrenProps = Pick<RedeemableProps,\r\n    'onRemovedCoupon' |\r\n    'onRemovedGiftCertificate' |\r\n    'isRemovingGiftCertificate' |\r\n    'isRemovingCoupon' |\r\n    'coupons' |\r\n    'giftCertificates'\r\n>;\r\n\r\nexport type RedeemableProps = {\r\n    appliedRedeemableError?: RequestError;\r\n    isApplyingRedeemable?: boolean;\r\n    isRemovingRedeemable?: boolean;\r\n    removedRedeemableError?: RequestError;\r\n    showAppliedRedeemables?: boolean;\r\n    shouldCollapseCouponCode?: boolean;\r\n    applyCoupon(code: string): Promise<CheckoutSelectors>;\r\n    applyGiftCertificate(code: string): Promise<CheckoutSelectors>;\r\n    clearError(error: Error): void;\r\n} & AppliedRedeemablesProps;\r\n\r\nconst Redeemable: FunctionComponent<RedeemableProps & WithLanguageProps & FormikProps<RedeemableFormValues>> = ({\r\n    shouldCollapseCouponCode,\r\n    showAppliedRedeemables,\r\n    ...formProps\r\n}) => (\r\n    <Toggle openByDefault={ !shouldCollapseCouponCode }>\r\n        { ({ toggle, isOpen }) => (\r\n            <Fragment>\r\n                { shouldCollapseCouponCode && <a\r\n                    className=\"redeemable-label\"\r\n                    data-test=\"redeemable-label\"\r\n                    href=\"#\"\r\n                    onClick={ preventDefault(toggle) }\r\n                >\r\n                    <TranslatedString id=\"redeemable.toggle_action\" />\r\n                </a> }\r\n                { !shouldCollapseCouponCode && <div className=\"redeemable-label\">\r\n                    <TranslatedString id=\"redeemable.toggle_action\" />\r\n                </div> }\r\n                { (isOpen || !shouldCollapseCouponCode) && <div data-test=\"redeemable-collapsable\">\r\n                    <RedeemableForm { ...formProps } />\r\n                    { showAppliedRedeemables &&\r\n                        <AppliedRedeemables { ...formProps } /> }\r\n                </div> }\r\n            </Fragment>\r\n        ) }\r\n    </Toggle>\r\n);\r\n\r\nconst RedeemableForm: FunctionComponent<Partial<RedeemableProps> & FormikProps<RedeemableFormValues> & WithLanguageProps> = ({\r\n    appliedRedeemableError,\r\n    isApplyingRedeemable,\r\n    clearError = noop,\r\n    submitForm,\r\n    language,\r\n}) => {\r\n    const handleKeyDown = useCallback(memoizeOne((setSubmitted: FormContextType['setSubmitted']) => (\r\n        (event: KeyboardEvent) => {\r\n            if (appliedRedeemableError) {\r\n                clearError(appliedRedeemableError);\r\n            }\r\n\r\n            // note: to prevent submitting main form, we manually intercept\r\n            // the enter key event and submit the \"subform\".\r\n            if (event.keyCode === 13) {\r\n                setSubmitted(true);\r\n                submitForm();\r\n                event.preventDefault();\r\n            }\r\n        }\r\n    )), [\r\n        appliedRedeemableError,\r\n        clearError,\r\n        submitForm,\r\n    ]);\r\n\r\n    const handleSubmit = useCallback(memoizeOne((setSubmitted: FormContextType['setSubmitted']) => (\r\n        () => {\r\n            setSubmitted(true);\r\n            submitForm();\r\n        }\r\n    )), []);\r\n\r\n    const renderLabel = useCallback((name: string) => (\r\n        <Label hidden htmlFor={ name }>\r\n            <TranslatedString id=\"redeemable.code_label\" />\r\n        </Label>\r\n    ), []);\r\n\r\n    const renderErrorMessage = useCallback((errorCode: string) => {\r\n        switch (errorCode) {\r\n        case 'min_purchase':\r\n            return <TranslatedString id=\"redeemable.coupon_min_order_total\" />;\r\n        case 'not_applicable':\r\n            return <TranslatedString id=\"redeemable.coupon_location_error\" />;\r\n        default:\r\n            return <TranslatedString id=\"redeemable.code_invalid_error\" />;\r\n        }\r\n    }, []);\r\n\r\n    const renderInput = useCallback((setSubmitted: FormContextType['setSubmitted']) => ({ field }: FieldProps) => (\r\n        <Fragment>\r\n            { appliedRedeemableError && appliedRedeemableError.errors && appliedRedeemableError.errors[0] &&\r\n                <Alert type={ AlertType.Error }>\r\n                    { renderErrorMessage(appliedRedeemableError.errors[0].code) }\r\n                </Alert> }\r\n\r\n            <div className=\"form-prefixPostfix\">\r\n                <TextInput\r\n                    { ...field }\r\n                    aria-label={ language.translate('redeemable.code_label') }\r\n                    className=\"form-input optimizedCheckout-form-input\"\r\n                    onKeyDown={ handleKeyDown(setSubmitted) }\r\n                    testId=\"redeemableEntry-input\"\r\n                />\r\n\r\n                <Button\r\n                    className=\"form-prefixPostfix-button--postfix\"\r\n                    id=\"applyRedeemableButton\"\r\n                    isLoading={ isApplyingRedeemable }\r\n                    onClick={ handleSubmit(setSubmitted) }\r\n                    testId=\"redeemableEntry-submit\"\r\n                    variant={ ButtonVariant.Secondary }\r\n                >\r\n                    <TranslatedString id=\"redeemable.apply_action\" />\r\n                </Button>\r\n            </div>\r\n        </Fragment>\r\n    ), [appliedRedeemableError, handleKeyDown, handleSubmit, isApplyingRedeemable, language, renderErrorMessage]);\r\n\r\n    const renderContent = useCallback(memoizeOne(({ setSubmitted }: FormContextType) => (\r\n        <FormField\r\n            input={ renderInput(setSubmitted) }\r\n            label={ renderLabel }\r\n            name=\"redeemableCode\"\r\n        />\r\n    )), [\r\n        renderLabel,\r\n        renderInput,\r\n    ]);\r\n\r\n    return <fieldset className=\"form-fieldset redeemable-entry\">\r\n        <FormProvider>\r\n            { renderContent }\r\n        </FormProvider>\r\n    </fieldset>;\r\n};\r\n\r\nexport default withLanguage(withFormik<RedeemableProps & WithLanguageProps, RedeemableFormValues>({\r\n    mapPropsToValues() {\r\n        return {\r\n            redeemableCode: '',\r\n        };\r\n    },\r\n\r\n    async handleSubmit({ redeemableCode }, { props: { applyCoupon, applyGiftCertificate, clearError } }) {\r\n        const code = redeemableCode.trim();\r\n\r\n        try {\r\n            await applyGiftCertificate(code);\r\n        } catch (error) {\r\n            clearError(error);\r\n            applyCoupon(code);\r\n        }\r\n    },\r\n\r\n    validationSchema({ language }: RedeemableProps & WithLanguageProps) {\r\n        return object({\r\n            redeemableCode: string()\r\n                .required(language.translate('redeemable.code_required_error')),\r\n        });\r\n    },\r\n})(memo(Redeemable)));\r\n","import { CheckoutContextProps } from '../checkout';\r\n\r\nimport mapToRedeemableProps from './mapToRedeemableProps';\r\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\r\n\r\nexport default function mapToCartSummaryProps(\r\n    context: CheckoutContextProps\r\n): WithCheckoutCartSummaryProps | null {\r\n    const {\r\n        checkoutState: {\r\n            data: { getConfig, getCustomer, getCheckout },\r\n        },\r\n    } = context;\r\n\r\n    const checkout = getCheckout();\r\n    const config = getConfig();\r\n    const customer = getCustomer();\r\n    const redeemableProps = mapToRedeemableProps(context);\r\n\r\n    if (!checkout || !config || !redeemableProps || !customer) {\r\n        return null;\r\n    }\r\n\r\n    const { isStoreCreditApplied, grandTotal } = checkout;\r\n    const { storeCredit } = customer;\r\n\r\n    return {\r\n        checkout,\r\n        shopperCurrency: config.shopperCurrency,\r\n        cartUrl: config.links.cartLink,\r\n        storeCurrency: config.currency,\r\n        storeCreditAmount: isStoreCreditApplied ? Math.min(grandTotal, storeCredit) : undefined,\r\n        ...redeemableProps,\r\n    };\r\n}\r\n","import { CheckoutContextProps } from '../checkout';\r\nimport { EMPTY_ARRAY } from '../common/utility';\r\n\r\nimport { RedeemableProps } from './Redeemable';\r\n\r\nexport default function mapToRedeemableProps(\r\n    context: CheckoutContextProps\r\n): RedeemableProps | null {\r\n    const {\r\n        checkoutService,\r\n        checkoutState: {\r\n            data: {\r\n                getConfig,\r\n                getCoupons,\r\n                getGiftCertificates,\r\n            },\r\n            statuses: {\r\n                isApplyingCoupon,\r\n                isApplyingGiftCertificate,\r\n                isRemovingCoupon,\r\n                isRemovingGiftCertificate,\r\n            },\r\n            errors: {\r\n                getApplyCouponError,\r\n                getApplyGiftCertificateError,\r\n                getRemoveCouponError,\r\n                getRemoveGiftCertificateError,\r\n            },\r\n        },\r\n    } = context;\r\n\r\n    const config = getConfig();\r\n\r\n    if (!config) {\r\n        return null;\r\n    }\r\n\r\n    return {\r\n        appliedRedeemableError: getApplyCouponError() || getApplyGiftCertificateError(),\r\n        applyCoupon: checkoutService.applyCoupon,\r\n        applyGiftCertificate: checkoutService.applyGiftCertificate,\r\n        clearError: checkoutService.clearError,\r\n        coupons: getCoupons() || EMPTY_ARRAY,\r\n        giftCertificates: getGiftCertificates() || EMPTY_ARRAY,\r\n        isApplyingRedeemable: (isApplyingCoupon() || isApplyingGiftCertificate()),\r\n        isRemovingCoupon: isRemovingCoupon(),\r\n        isRemovingGiftCertificate: isRemovingGiftCertificate(),\r\n        onRemovedCoupon: checkoutService.removeCoupon,\r\n        onRemovedGiftCertificate: checkoutService.removeGiftCertificate,\r\n        removedRedeemableError: (getRemoveCouponError() || getRemoveGiftCertificateError()),\r\n        shouldCollapseCouponCode: config.checkoutSettings.isCouponCodeCollapsed,\r\n    };\r\n}\r\n","import React, { ComponentType, FunctionComponent } from 'react';\r\n\r\nimport { OrderSummaryProps, OrderSummarySubtotalsProps } from '../order';\r\n\r\nimport mapToOrderSummarySubtotalsProps from './mapToOrderSummarySubtotalsProps';\r\nimport { WithCheckoutCartSummaryProps } from './CartSummary';\r\nimport Redeemable from './Redeemable';\r\n\r\nexport default function withRedeemable(\r\n    OriginalComponent: ComponentType<OrderSummaryProps & OrderSummarySubtotalsProps>\r\n): FunctionComponent<\r\n    WithCheckoutCartSummaryProps &\r\n    { headerLink?: any }\r\n> {\r\n    return props => {\r\n        const {\r\n            checkout,\r\n            storeCurrency,\r\n            shopperCurrency,\r\n            headerLink,\r\n            onRemovedCoupon,\r\n            onRemovedGiftCertificate,\r\n            storeCreditAmount,\r\n            ...redeemableProps\r\n        } = props;\r\n\r\n        return (\r\n            <OriginalComponent\r\n                { ...mapToOrderSummarySubtotalsProps(checkout) }\r\n                additionalLineItems={\r\n                    <Redeemable { ...{\r\n                        ...redeemableProps,\r\n                        onRemovedCoupon,\r\n                        onRemovedGiftCertificate,\r\n                    } }\r\n                    />\r\n                }\r\n                headerLink={ headerLink }\r\n                lineItems={ checkout.cart.lineItems }\r\n                onRemovedCoupon={ onRemovedCoupon }\r\n                onRemovedGiftCertificate={ onRemovedGiftCertificate }\r\n                shopperCurrency={ shopperCurrency }\r\n                storeCreditAmount={ storeCreditAmount }\r\n                storeCurrency={ storeCurrency }\r\n                total={ checkout.outstandingBalance }\r\n            />\r\n        );\r\n    };\r\n}\r\n","import { Checkout } from '@bigcommerce/checkout-sdk';\r\n\r\nimport { OrderSummarySubtotalsProps } from '../order';\r\nimport { hasSelectedShippingOptions } from '../shipping';\r\n\r\nexport default function mapToOrderSummarySubtotalsProps({\r\n    subtotal,\r\n    cart: { discountAmount },\r\n    giftCertificates,\r\n    consignments,\r\n    handlingCostTotal,\r\n    shippingCostBeforeDiscount,\r\n    giftWrappingCostTotal,\r\n    coupons,\r\n    taxes,\r\n}: Checkout): OrderSummarySubtotalsProps {\r\n    return {\r\n        subtotalAmount: subtotal,\r\n        discountAmount,\r\n        giftCertificates,\r\n        giftWrappingAmount: giftWrappingCostTotal,\r\n        shippingAmount: hasSelectedShippingOptions(consignments) ?\r\n            shippingCostBeforeDiscount :\r\n            undefined,\r\n        handlingAmount: handlingCostTotal,\r\n        coupons,\r\n        taxes,\r\n    };\r\n}\r\n","import React, { FunctionComponent } from 'react';\r\n\r\nimport { TranslatedString } from '../locale';\r\n\r\nconst OrderSummaryHeader: FunctionComponent = ({ children }) => (\r\n    <header className=\"cart-header\">\r\n        <h3 className=\"cart-title optimizedCheckout-headingSecondary\">\r\n            <TranslatedString id=\"cart.cart_heading\" />\r\n        </h3>\r\n       { children }\r\n    </header>\r\n);\r\n\r\nexport default OrderSummaryHeader;\r\n","import { LineItemMap, ShopperCurrency, StoreCurrency } from '@bigcommerce/checkout-sdk';\r\nimport React, { useMemo, FunctionComponent, ReactNode } from 'react';\r\n\r\nimport removeBundledItems from './removeBundledItems';\r\nimport OrderSummaryHeader from './OrderSummaryHeader';\r\nimport OrderSummaryItems from './OrderSummaryItems';\r\nimport OrderSummarySection from './OrderSummarySection';\r\nimport OrderSummarySubtotals, { OrderSummarySubtotalsProps } from './OrderSummarySubtotals';\r\nimport OrderSummaryTotal from './OrderSummaryTotal';\r\n\r\nexport interface OrderSummaryProps {\r\n    lineItems: LineItemMap;\r\n    total: number;\r\n    headerLink: ReactNode;\r\n    storeCurrency: StoreCurrency;\r\n    shopperCurrency: ShopperCurrency;\r\n    additionalLineItems?: ReactNode;\r\n}\r\n\r\nconst OrderSummary: FunctionComponent<OrderSummaryProps & OrderSummarySubtotalsProps> = ({\r\n    storeCurrency,\r\n    shopperCurrency,\r\n    headerLink,\r\n    additionalLineItems,\r\n    lineItems,\r\n    total,\r\n    ...orderSummarySubtotalsProps\r\n}) => {\r\n    const nonBundledLineItems = useMemo(() => (\r\n        removeBundledItems(lineItems)\r\n    ), [lineItems]);\r\n\r\n    return <article className=\"cart optimizedCheckout-orderSummary\" data-test=\"cart\">\r\n        <OrderSummaryHeader>\r\n            { headerLink }\r\n        </OrderSummaryHeader>\r\n\r\n        <OrderSummarySection>\r\n            <OrderSummaryItems items={ nonBundledLineItems } />\r\n        </OrderSummarySection>\r\n\r\n        <OrderSummarySection>\r\n            <OrderSummarySubtotals\r\n                { ...orderSummarySubtotalsProps }\r\n            />\r\n            { additionalLineItems }\r\n        </OrderSummarySection>\r\n\r\n        <OrderSummarySection>\r\n            <OrderSummaryTotal\r\n                orderAmount={ total }\r\n                shopperCurrencyCode={ shopperCurrency.code }\r\n                storeCurrencyCode={ storeCurrency.code }\r\n            />\r\n        </OrderSummarySection>\r\n    </article>;\r\n};\r\n\r\nexport default OrderSummary;\r\n","import { LineItemMap } from '@bigcommerce/checkout-sdk';\r\n\r\nexport default function removeBundledItems(lineItems: LineItemMap): LineItemMap {\r\n    return {\r\n        ...lineItems,\r\n        physicalItems: lineItems.physicalItems.filter(item => (typeof item.parentId !== 'string')),\r\n        digitalItems: lineItems.digitalItems.filter(item => (typeof item.parentId !== 'string')),\r\n    };\r\n}\r\n"],"names":["cartUrl","props","headerLink","url","memo","className","href","id","target","coupon","displayName","TranslatedString","code","giftCertificate","ShopperCurrency","amount","used","remaining","height","viewBox","width","xmlns","d","children","isRemoving","onRemove","disabled","onClick","type","AppliedCouponChecklistItem","onRemoved","handleRemove","useCallback","AppliedGiftCertificateChecklistItem","coupons","giftCertificates","isRemovingCoupon","isRemovingGiftCertificate","onRemovedCoupon","onRemovedGiftCertificate","length","map","key","RedeemableForm","appliedRedeemableError","isApplyingRedeemable","clearError","noop","submitForm","language","handleKeyDown","memoizeOne","setSubmitted","event","keyCode","preventDefault","handleSubmit","renderLabel","name","Label","hidden","htmlFor","renderErrorMessage","errorCode","renderInput","field","Fragment","errors","Alert","TextInput","translate","onKeyDown","testId","Button","isLoading","variant","renderContent","FormField","input","label","FormProvider","withLanguage","withFormik","mapPropsToValues","redeemableCode","applyCoupon","applyGiftCertificate","trim","validationSchema","required","shouldCollapseCouponCode","showAppliedRedeemables","formProps","Toggle","openByDefault","toggle","isOpen","mapToCartSummaryProps","context","getConfig","getCustomer","checkout","getCheckout","config","customer","redeemableProps","isStoreCreditApplied","grandTotal","storeCredit","shopperCurrency","links","cartLink","storeCurrency","currency","storeCreditAmount","Math","min","undefined","mapToRedeemableProps","checkoutService","data","getCoupons","getGiftCertificates","statuses","isApplyingCoupon","isApplyingGiftCertificate","getApplyCouponError","getApplyGiftCertificateError","getRemoveCouponError","getRemoveGiftCertificateError","removeCoupon","removeGiftCertificate","removedRedeemableError","checkoutSettings","isCouponCodeCollapsed","withRedeemable","OriginalComponent","subtotal","discountAmount","consignments","handlingCostTotal","shippingCostBeforeDiscount","giftWrappingCostTotal","taxes","subtotalAmount","giftWrappingAmount","shippingAmount","hasSelectedShippingOptions","handlingAmount","additionalLineItems","Redeemable","lineItems","cart","total","outstandingBalance","orderSummarySubtotalsProps","nonBundledLineItems","useMemo","physicalItems","filter","item","parentId","digitalItems","OrderSummarySection","OrderSummaryItems","items","OrderSummarySubtotals","OrderSummaryTotal","orderAmount","shopperCurrencyCode","storeCurrencyCode"],"sourceRoot":""}